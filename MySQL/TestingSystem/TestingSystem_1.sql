DROP TABLE IF EXISTS Department;
CREATE TABLE Department (
    DepartmentID TINYINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    DepartmentName NVARCHAR(255)
);
DROP TABLE IF EXISTS `Position`;
CREATE TABLE `Position` (
    PositionID TINYINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    PositionName VARCHAR(55) UNIQUE KEY
);
DROP TABLE IF EXISTS `Account`;
CREATE TABLE `Account` (
    AccountID TINYINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    Email NVARCHAR(255) UNIQUE KEY,
    UserName VARCHAR(255),
    FullName NVARCHAR(255),
    DepartmentID TINYINT UNSIGNED,
    PositionID TINYINT UNSIGNED,
    CreateDate DATETIME DEFAULT NOW(),
    FOREIGN KEY (DepartmentID)
        REFERENCES Department (DepartmentID) ON DELETE CASCADE,
    FOREIGN KEY (PositionID)
        REFERENCES `Position` (PositionID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS `Group`;
CREATE TABLE `Group` (
    GroupID TINYINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    GroupName NVARCHAR(255) NOT NULL,
    CreatorID TINYINT UNSIGNED NOT NULL,
    CreateDate  DATETIME DEFAULT NOW()
);
DROP TABLE IF EXISTS GroupAccount;
CREATE TABLE GroupAccount (
    GroupID TINYINT UNSIGNED NOT NULL,
    AccountID TINYINT UNSIGNED NOT NULL,
    JoinDate  DATETIME DEFAULT NOW(),
    FOREIGN KEY (GroupID)
        REFERENCES `Group` (GroupID) ON DELETE CASCADE,
    FOREIGN KEY (AccountID)
        REFERENCES `Account` (AccountID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS TypeQuestion;
CREATE TABLE TypeQuestion (
    TypeID TINYINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    TypeName NVARCHAR(255)
);
DROP TABLE IF EXISTS CategoryQuestion;
CREATE TABLE CategoryQuestion (
    CategoryID TINYINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    CategoryName NVARCHAR(255)
);
DROP TABLE IF EXISTS Question;
CREATE TABLE Question (
    QuestionID TINYINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    Content NVARCHAR(255),
    CategoryID TINYINT UNSIGNED,
    TypeID TINYINT UNSIGNED,
    CreatorID TINYINT UNSIGNED,
    CreateDate  DATETIME DEFAULT NOW(),
    FOREIGN KEY (CategoryID)
        REFERENCES CategoryQuestion (CategoryID) ON DELETE CASCADE, 
    FOREIGN KEY (TypeID)
        REFERENCES TypeQuestion (TypeID) ON DELETE CASCADE,
    FOREIGN KEY (CreatorID)
        REFERENCES `Account` (AccountID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS Answer;
CREATE TABLE Answer (
    AnswerID TINYINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    Content NVARCHAR(255),
    QuestionID TINYINT UNSIGNED,
    isCorrect ENUM('true', 'false'),
    FOREIGN KEY (QuestionID)
        REFERENCES Question (QuestionID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS Exam;
CREATE TABLE Exam (
    ExamID TINYINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `Code` VARCHAR(255),
    Title NVARCHAR(255),
    CategoryID TINYINT UNSIGNED,
    Duration TINYINT UNSIGNED NOT NULL,
    CreatorID TINYINT UNSIGNED,
    CreateDate  DATETIME DEFAULT NOW(),
    FOREIGN KEY (CategoryID)
        REFERENCES CategoryQuestion (CategoryID) ON DELETE CASCADE,
    FOREIGN KEY (CreatorID)
        REFERENCES `Account` (AccountID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS ExamQuestion;
CREATE TABLE ExamQuestion (
    ExamID TINYINT UNSIGNED,
    QuestionID TINYINT UNSIGNED,
    FOREIGN KEY (QuestionID)
        REFERENCES Question (QuestionID) ON DELETE CASCADE,
    FOREIGN KEY (ExamID)
        REFERENCES Exam (ExamID) ON DELETE CASCADE,
    PRIMARY KEY (ExamID , QuestionID) 
);


















